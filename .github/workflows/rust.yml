name: RustDesk CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C target-cpu=native"

jobs:
  build-windows:
    name: Build Windows Release
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # 安装依赖项
      - name: Install dependencies
        shell: powershell
        run: |
          choco install -y windows-sdk-10.1
          if (-not (Test-Path env:VCPKG_ROOT)) {
            git clone https://github.com/microsoft/vcpkg
            .\vcpkg\bootstrap-vcpkg.bat -disableMetrics
            $vcpkgPath = (Resolve-Path .\vcpkg).Path
            echo "VCPKG_ROOT=$vcpkgPath" >> $env:GITHUB_ENV
            echo "$vcpkgPath\installed\x64-windows\bin" >> $env:GITHUB_PATH
          }

      # 设置Rust工具链
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # 构建步骤
      - name: Build agent
        working-directory: ./agent_src
        env:
          VCPKGRS_DYNAMIC: 1
        run: |
          cargo build --release --target ${{ matrix.target }} --features "default"
          if [ -f "./target/${{ matrix.target }}/release/rustdesk.exe" ]; then
            strip ./target/${{ matrix.target }}/release/rustdesk.exe || true
          fi

      # 打包产物
      - name: Package artifacts
        run: |
          mkdir -p release
          cp ./agent_src/target/${{ matrix.target }}/release/rustdesk.exe ./release/agent.exe
          cp -r ./images ./release/
          7z a -tzip rustdesk-lite-${{ github.run_number }}.zip ./release/*

      - uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-${{ matrix.target }}
          path: rustdesk-lite-*.zip
