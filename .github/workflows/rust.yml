name: 编译Agent

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: Build and Test
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: ${{ matrix.target }}

    - name: Install vcpkg and dependencies
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat
        .\vcpkg\vcpkg.exe install opus:x64-windows
        .\vcpkg\vcpkg.exe install libvpx:x64-windows-static
        .\vcpkg\vcpkg.exe install yuv:x64-windows-static
      shell: pwsh

    - name: Set VCPKG_ROOT
      run: echo "VCPKG_ROOT=${{ github.workspace }}\vcpkg" >> $env:GITHUB_ENV
      shell: pwsh

    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          agent_src/target
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('agent_src/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build (Release)
      working-directory: agent_src
      run: cargo build --release --verbose

    - name: Run Tests
      working-directory: agent_src
      run: cargo test --verbose

    - name: Run Integration Tests
      working-directory: agent_src
      run: cargo test --release --verbose

    - name: Upload Release Artifacts
      if: matrix.target == 'x86_64-pc-windows-msvc'
      uses: actions/upload-artifact@v4
      with:
        name: release-bin
        path: |
          agent_src/target/release/agent.exe
