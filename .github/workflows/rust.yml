name: RustDesk CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C target-cpu=native"
  VCPKG_DEFAULT_TRIPLET: "x64-windows-static"

jobs:
  build-windows:
    name: Build Windows Release
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup vcpkg and dependencies
        shell: powershell
        run: |
          git clone https://github.com/microsoft/vcpkg
          .\vcpkg\bootstrap-vcpkg.bat -disableMetrics
          .\vcpkg\vcpkg install libvpx:x64-windows-static libyuv:x64-windows-static
          $vcpkgPath = (Resolve-Path .\vcpkg).Path
          echo "VCPKG_ROOT=$vcpkgPath" >> $env:GITHUB_ENV
          echo "$vcpkgPath\installed\x64-windows-static\bin" >> $env:GITHUB_PATH

      - name: Verify installation
        shell: powershell
        run: |
          if (-not (Test-Path "$env:VCPKG_ROOT\installed\x64-windows-static\include\vpx\vp8.h")) {
            Write-Error "VPX headers not found!"
            exit 1
          }

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          components: rust-src

      - name: Build agent
        working-directory: ./agent_src
        shell: powershell
        env:
          VCPKGRS_DYNAMIC: 0
          C_INCLUDE_PATH: "${{ env.VCPKG_ROOT }}/installed/x64-windows-static/include"
        run: |
          cargo build --release --target ${{ matrix.target }} --features "default"
          if (Test-Path "./target/${{ matrix.target }}/release/rustdesk.exe") {
            & "C:\msys64\usr\bin\strip.exe" "./target/${{ matrix.target }}/release/rustdesk.exe" *>$null
          }

      - name: Package artifacts
        shell: powershell
        run: |
          New-Item -ItemType Directory -Path "release" -Force
          Copy-Item "./agent_src/target/${{ matrix.target }}/release/rustdesk.exe" "./release/agent.exe"
          Copy-Item -Recurse "./images" "./release/"
          7z a -tzip "rustdesk-lite-$env:run_number.zip" "./release/*"

      - uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-${{ matrix.target }}
          path: rustdesk-lite-*.zip
