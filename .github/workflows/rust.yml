name: RustDesk CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C target-cpu=native"

jobs:
  build-windows:
    name: Build Windows Release
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Windows SDK (推荐方案)
        run: |
          choco install -y windows-sdk-10.1
          echo "C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64" >> $GITHUB_PATH

      - name: Build agent
        working-directory: ./agent_src
        run: |
          cargo build --release --target ${{ matrix.target }} --features "default"
          strip ./target/${{ matrix.target }}/release/rustdesk.exe || true  # 可选：减小二进制体积

      - name: Package artifacts
        run: |
          mkdir -p release
          cp ./agent_src/target/${{ matrix.target }}/release/rustdesk.exe ./release/agent.exe
          cp -r ./images ./release/
          7z a -tzip rustdesk-lite-${{ github.run_number }}.zip ./release/*

      - uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-${{ matrix.target }}
          path: rustdesk-lite-${{ github.run_number }}.zip
