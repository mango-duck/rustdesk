name: RustDesk CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C target-cpu=native"

jobs:
  build-windows:
    name: Build Windows Release
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        shell: powershell
        run: |
          choco install -y windows-sdk-10.1
          if (-not (Test-Path env:VCPKG_ROOT)) {
            git clone https://github.com/microsoft/vcpkg
            .\vcpkg\bootstrap-vcpkg.bat -disableMetrics
            $vcpkgPath = (Resolve-Path .\vcpkg).Path
            echo "VCPKG_ROOT=$vcpkgPath" >> $env:GITHUB_ENV
            echo "$vcpkgPath\installed\x64-windows\bin" >> $env:GITHUB_PATH
          }

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build agent
        working-directory: ./agent_src
        shell: powershell
        env:
          VCPKGRS_DYNAMIC: 1
        run: |
          cargo build --release --target $env:matrix_target --features "default"
          if (Test-Path "./target/$env:matrix_target/release/rustdesk.exe") {
            & "C:\msys64\usr\bin\strip.exe" "./target/$env:matrix_target/release/rustdesk.exe" *>$null
          }

      - name: Package artifacts
        shell: powershell
        run: |
          New-Item -ItemType Directory -Path "release" -Force
          Copy-Item "./agent_src/target/$env:matrix_target/release/rustdesk.exe" "./release/agent.exe"
          Copy-Item -Recurse "./images" "./release/"
          & "7z" a -tzip "rustdesk-lite-$env:run_number.zip" "./release/*"

      - uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-${{ matrix.target }}
          path: rustdesk-lite-*.zip
