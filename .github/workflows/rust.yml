name: RustDesk CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C target-cpu=native"

jobs:
  build-windows:
    name: Build Windows Release
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # 修复1：使用纯Windows路径格式安装vcpkg
      - name: Setup vcpkg
        shell: cmd
        run: |
          git clone https://github.com/microsoft/vcpkg
          cd vcpkg
          bootstrap-vcpkg.bat -disableMetrics
          echo VCPKG_ROOT=%cd%>>%GITHUB_ENV%
          echo VCPKG_DISABLE_METRICS=1>>%GITHUB_ENV%
          echo "::add-path::%cd%\installed\x64-windows\bin"

      # 修复2：使用Chocolatey安装必要组件
      - name: Install dependencies
        shell: powershell
        run: |
          choco install -y windows-sdk-10.1
          choco install -y llvm --version=16.0.6
          refreshenv

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          components: rust-src

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~\.cargo\registry
            ~\.cargo\git
            target
            vcpkg\installed
          key: ${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      # 修复3：显式设置环境变量（Windows格式）
      - name: Configure environment
        shell: cmd
        run: |
          echo "VCPKGRS_DYNAMIC=1" >> %GITHUB_ENV%
          echo "CARGO_TARGET_X86_64_PC_WINDOWS_MSVC_LINKER=$(where cl.exe)" >> %GITHUB_ENV%

      - name: Build agent
        working-directory: ./agent_src
        shell: cmd
        run: |
          cargo build --release --target %matrix.target% --features "default"
          if exist "target\%matrix.target%\release\rustdesk.exe" (
            strip target\%matrix.target%\release\rustdesk.exe || echo "Strip failed but continuing"
          )

      - name: Package artifacts
        shell: cmd
        run: |
          mkdir release
          copy /Y "agent_src\target\%matrix.target%\release\rustdesk.exe" "release\agent.exe"
          xcopy /E /Y images release\images
          7z a -tzip rustdesk-lite-%RUN_NUMBER%.zip release\*

      - uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-${{ matrix.target }}
          path: rustdesk-lite-*.zip
