name: RustDesk CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C target-cpu=native"

jobs:
  build-windows:
    name: Build Windows Release
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # 方案1：跳过LLVM安装（使用系统已有版本）
      - name: Verify existing LLVM
        shell: powershell
        run: |
          Write-Output "已安装的LLVM版本："
          clang --version || Write-Output "未找到LLVM"
          echo "LLVM_PATH=$($(where clang) | Select-Object -First 1 | Split-Path -Parent)" >> $env:GITHUB_ENV

      # 方案2：使用官方安装器替代Chocolatey
      - name: Install dependencies (Fallback)
        if: ${{ failure() }}  # 仅在方案1失败时运行
        shell: powershell
        run: |
          # 下载官方LLVM安装器
          $llvmUrl = "https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.6/LLVM-16.0.6-win64.exe"
          Invoke-WebRequest -Uri $llvmUrl -OutFile llvm-installer.exe
          Start-Process -Wait -FilePath .\llvm-installer.exe -ArgumentList "/S", "ADD_LLVM_TO_PATH=1"
          Remove-Item llvm-installer.exe
          refreshenv

      # 修复Chocolatey环境刷新问题
      - name: Install Windows SDK
        shell: powershell
        run: |
          choco install -y windows-sdk-10.1 --force
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          Update-SessionEnvironment
          echo "WindowsSdkDir=$env:WindowsSdkDir" >> $env:GITHUB_ENV

      - name: Setup vcpkg
        shell: cmd
        run: |
          git clone https://github.com/microsoft/vcpkg
          cd vcpkg
          bootstrap-vcpkg.bat -disableMetrics
          echo VCPKG_ROOT=%cd%>>%GITHUB_ENV%
          echo ::add-path::%cd%\installed\x64-windows\bin>>%GITHUB_PATH%

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          components: rust-src

      - name: Build agent
        working-directory: ./agent_src
        shell: cmd
        env:
          VCPKGRS_DYNAMIC: 1
          # 显式指定工具链路径
          CC: "${{ env.LLVM_PATH }}\clang.exe"
          CXX: "${{ env.LLVM_PATH }}\clang++.exe"
        run: |
          cargo build --release --target %matrix.target% --features "default"
          if exist "target\%matrix.target%\release\rustdesk.exe" (
            strip target\%matrix.target%\release\rustdesk.exe || echo "Strip skipped"
          )

      - uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-${{ matrix.target }}
          path: rustdesk-lite-*.zip
